<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
 PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="business-rule-microservice">
   <title>Business rules microservice in 15 minutes</title>
   <body>
      <section id="_prerequisites">
         <title>Prerequisites</title>
         <ul>
            <li>
               <xref href="../installation/configure-maven.dita">Apache Maven installed</xref>
            </li>
            <li>
               <xref href="#../installation/canvas.dita/">BAMOE Canvas installed</xref>
            </li>
         </ul>
      </section>
      <section id="_procedure">
         <p>After you create your project, you can create or import Decision Model and Notation (DMN) decision models and Drools Rule Language (DRL) business rules in the <tt>src/main/resources</tt> folder of your project. You can also include Java classes in the <tt>src/main/java</tt> folder of your project that act as Java services or provide implementations that can be called from decisions.</p>
         <p>The example for this procedure is a basic Kogito microservice that provides a REST endpoint <tt>/persons</tt>. This endpoint is automatically generated based on an example <tt>PersonDecisions.dmn</tt> DMN model to make decisions based on the data being processed.</p>
         <p>The business decision contains the decision logic of the IBM BAMOE service. You can define business rules and decisions in different ways, such as with DMN models or DRL rules. The example for this procedure uses a DMN model.</p>
         <ol>
            <li>
               <p>In the Maven project that was created in the <xref href="../getting-started/project-setup.dita">Initial Project Setup and Walkthrough</xref> section, navigate to the <tt>src/main/java/com/ibm</tt> folder and add the following <tt>Person.java</tt> file:</p>
               <div>
                  <p outputclass="title">
                     <b>Example person Java object</b>
                  </p>
                  <codeblock outputclass="language-java">
package com.ibm;

import java.io.Serializable;

public class Person {

	private String name;
	private int age;
	private boolean adult;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public boolean isAdult() {
		return adult;
	}

	public void setAdult(boolean adult) {
		this.adult = adult;
	}

	@Override
	public String toString() {
		return "Person [name=" + name + ", age=" + age + ", adult=" + adult + "]";
	}

}
</codeblock>
                  <p>This example Java object sets and retrieves a personâ€™s name, age, and adult status.</p>
               </div>
            </li>
            <li>
               <p>Navigate to the <tt>src/main/resources</tt> folder and add the following <tt>PersonDecisions.dmn</tt> DMN decision model or continue to create it from scratch:</p>
               <div>
                  <p outputclass="title">
                     <b>Example PersonDecisions DMN file</b>
                  </p>
                  <codeblock outputclass="language-xml">
&lt;dmn:definitions xmlns:dmn="http://www.omg.org/spec/DMN/20180521/MODEL/" xmlns="https://kiegroup.org/dmn/_52CEF9FD-9943-4A89-96D5-6F66810CA4C1" xmlns:di="http://www.omg.org/spec/DMN/20180521/DI/" xmlns:kie="http://www.drools.org/kie/dmn/1.2" xmlns:dmndi="http://www.omg.org/spec/DMN/20180521/DMNDI/" xmlns:dc="http://www.omg.org/spec/DMN/20180521/DC/" xmlns:feel="http://www.omg.org/spec/DMN/20180521/FEEL/" id="_84B432F5-87E7-43B1-9101-1BAFE3D18FC5" name="PersonDecisions" typeLanguage="http://www.omg.org/spec/DMN/20180521/FEEL/" namespace="https://kiegroup.org/dmn/_52CEF9FD-9943-4A89-96D5-6F66810CA4C1"&gt;
  &lt;dmn:extensionElements/&gt;
  &lt;dmn:itemDefinition id="_DEF2C3A7-F3A9-4ABA-8D0A-C823E4EB43AB" name="tPerson" isCollection="false"&gt;
    &lt;dmn:itemComponent id="_DB46DB27-0752-433F-ABE3-FC9E3BDECC97" name="Age" isCollection="false"&gt;
      &lt;dmn:typeRef&gt;number&lt;/dmn:typeRef&gt;
    &lt;/dmn:itemComponent&gt;
    &lt;dmn:itemComponent id="_8C6D865F-E9C8-43B0-AB4D-3F2075A4ECA6" name="Name" isCollection="false"&gt;
      &lt;dmn:typeRef&gt;string&lt;/dmn:typeRef&gt;
    &lt;/dmn:itemComponent&gt;
    &lt;dmn:itemComponent id="_9033704B-4E1C-42D3-AC5E-0D94107303A1" name="Adult" isCollection="false"&gt;
      &lt;dmn:typeRef&gt;boolean&lt;/dmn:typeRef&gt;
    &lt;/dmn:itemComponent&gt;
  &lt;/dmn:itemDefinition&gt;
  &lt;dmn:inputData id="_F9685B74-0C69-4982-B3B6-B04A14D79EDB" name="Person"&gt;
    &lt;dmn:extensionElements/&gt;
    &lt;dmn:variable id="_0E345A3C-BB1F-4FB2-B00F-C5691FD1D36C" name="Person" typeRef="tPerson"/&gt;
  &lt;/dmn:inputData&gt;
  &lt;dmn:decision id="_0D2BD7A9-ACA1-49BE-97AD-19699E0C9852" name="isAdult"&gt;
    &lt;dmn:extensionElements/&gt;
    &lt;dmn:variable id="_54CD509F-452F-40E5-941C-AFB2667D4D45" name="isAdult" typeRef="boolean"/&gt;
    &lt;dmn:informationRequirement id="_2F819B03-36B7-4DEB-AED6-2B46AE3ADB75"&gt;
      &lt;dmn:requiredInput href="#_F9685B74-0C69-4982-B3B6-B04A14D79EDB"/&gt;
    &lt;/dmn:informationRequirement&gt;
    &lt;dmn:decisionTable id="_58370567-05DE-4EC0-AC2D-A23803C1EAAE" hitPolicy="UNIQUE" preferredOrientation="Rule-as-Row"&gt;
      &lt;dmn:input id="_ADEF36CD-286A-454A-ABD8-9CF96014021B"&gt;
        &lt;dmn:inputExpression id="_4930C2E5-7401-46DD-8329-EAC523BFA492" typeRef="number"&gt;
          &lt;dmn:text&gt;Person.Age&lt;/dmn:text&gt;
        &lt;/dmn:inputExpression&gt;
      &lt;/dmn:input&gt;
      &lt;dmn:output id="_9867E9A3-CBF6-4D66-9804-D2206F6B4F86" typeRef="boolean"/&gt;
      &lt;dmn:rule id="_59D6BFF0-35B4-4B7E-8D7B-E31CB0DB8242"&gt;
        &lt;dmn:inputEntry id="_7DC55D63-234F-497B-A12A-93DA358C0136"&gt;
          &lt;dmn:text&gt;&amp;gt; 18&lt;/dmn:text&gt;
        &lt;/dmn:inputEntry&gt;
        &lt;dmn:outputEntry id="_B3BB5B97-05B9-464A-AB39-58A33A9C7C00"&gt;
          &lt;dmn:text&gt;true&lt;/dmn:text&gt;
        &lt;/dmn:outputEntry&gt;
      &lt;/dmn:rule&gt;
      &lt;dmn:rule id="_8FCD63FE-8AD8-4F56-AD12-923E87AFD1B1"&gt;
        &lt;dmn:inputEntry id="_B4EF7F13-E486-46CB-B14E-1D21647258D9"&gt;
          &lt;dmn:text&gt;&amp;lt;= 18&lt;/dmn:text&gt;
        &lt;/dmn:inputEntry&gt;
        &lt;dmn:outputEntry id="_F3A9EC8E-A96B-42A0-BF87-9FB1F2FDB15A"&gt;
          &lt;dmn:text&gt;false&lt;/dmn:text&gt;
        &lt;/dmn:outputEntry&gt;
      &lt;/dmn:rule&gt;
    &lt;/dmn:decisionTable&gt;
  &lt;/dmn:decision&gt;
  &lt;dmndi:DMNDI&gt;
    &lt;dmndi:DMNDiagram&gt;
      &lt;di:extension&gt;
        &lt;kie:ComponentsWidthsExtension&gt;
          &lt;kie:ComponentWidths dmnElementRef="_58370567-05DE-4EC0-AC2D-A23803C1EAAE"&gt;
            &lt;kie:width&gt;50&lt;/kie:width&gt;
            &lt;kie:width&gt;100&lt;/kie:width&gt;
            &lt;kie:width&gt;100&lt;/kie:width&gt;
            &lt;kie:width&gt;100&lt;/kie:width&gt;
          &lt;/kie:ComponentWidths&gt;
        &lt;/kie:ComponentsWidthsExtension&gt;
      &lt;/di:extension&gt;
      &lt;dmndi:DMNShape id="dmnshape-_F9685B74-0C69-4982-B3B6-B04A14D79EDB" dmnElementRef="_F9685B74-0C69-4982-B3B6-B04A14D79EDB" isCollapsed="false"&gt;
        &lt;dmndi:DMNStyle&gt;
          &lt;dmndi:FillColor red="255" green="255" blue="255"/&gt;
          &lt;dmndi:StrokeColor red="0" green="0" blue="0"/&gt;
          &lt;dmndi:FontColor red="0" green="0" blue="0"/&gt;
        &lt;/dmndi:DMNStyle&gt;
        &lt;dc:Bounds x="404" y="464" width="100" height="50"/&gt;
        &lt;dmndi:DMNLabel/&gt;
      &lt;/dmndi:DMNShape&gt;
      &lt;dmndi:DMNShape id="dmnshape-_0D2BD7A9-ACA1-49BE-97AD-19699E0C9852" dmnElementRef="_0D2BD7A9-ACA1-49BE-97AD-19699E0C9852" isCollapsed="false"&gt;
        &lt;dmndi:DMNStyle&gt;
          &lt;dmndi:FillColor red="255" green="255" blue="255"/&gt;
          &lt;dmndi:StrokeColor red="0" green="0" blue="0"/&gt;
          &lt;dmndi:FontColor red="0" green="0" blue="0"/&gt;
        &lt;/dmndi:DMNStyle&gt;
        &lt;dc:Bounds x="404" y="311" width="100" height="50"/&gt;
        &lt;dmndi:DMNLabel/&gt;
      &lt;/dmndi:DMNShape&gt;
      &lt;dmndi:DMNEdge id="dmnedge-_2F819B03-36B7-4DEB-AED6-2B46AE3ADB75" dmnElementRef="_2F819B03-36B7-4DEB-AED6-2B46AE3ADB75"&gt;
        &lt;di:waypoint x="504" y="489"/&gt;
        &lt;di:waypoint x="404" y="336"/&gt;
      &lt;/dmndi:DMNEdge&gt;
    &lt;/dmndi:DMNDiagram&gt;
  &lt;/dmndi:DMNDI&gt;
&lt;/dmn:definitions&gt;
</codeblock>
                  <p>This example DMN model consists of a basic DMN input node and a decision node defined by a DMN decision table with a custom structured data type.</p>
                  <p>In VS Code, you can add the <xref href="../tools/developer-tools-for-vscode.dita">
                        <b>IBM BAMOE Developer Tools for VS Code</b>
                     </xref> to design the decision requirements diagram (DRD), boxed expression, and data types with the DMN modeler.</p>
                  <p>To create this DMN model example in VSCode using the DMN modeler, follow these steps:</p>
                  <ol>
                     <li>Create a <tt>PersonDecisions.dmn</tt> file, after the editor finishes loading, click the <b>Properties</b> icon in the upper-right corner of the DMN modeler, and confirm that the DMN model <b>Name</b> is set to <tt>PersonDecisions</tt>.</li>
                     <li>In the left palette, select <b>DMN Input Data</b>, drag the node to the canvas, and double-click the node to name it <tt>Person</tt>.</li>
                     <li>
                        <p>In the left palette, drag the <b>DMN Decision</b> node to the canvas, double-click the node to name it <tt>isAdult</tt>, and link to it from the input node.</p>
                        <fig>
                           <title>Example <tt>PersonDecisions</tt> DMN decision requirements diagram (DRD)</title>
                           <image href="../images/kogito-dmn-example-person.png" placement="break">
                              <alt>Image of PersonDecisions decision diagram</alt>
                           </image>
                        </fig>
                     </li>
                     <li>
                        <p>In the upper tab options, select the <b>Data Types</b> tab and add the following <tt>tPerson</tt> structured data type and nested data types:</p>
                        <fig>
                           <title>Example DMN data types</title>
                           <image href="../images/kogito-dmn-example-person-data-types.png" placement="break">
                              <alt>Image of PersonDecisions data types</alt>
                           </image>
                        </fig>
                     </li>
                     <li>After you define the data types, select the <b>Editor</b> tab to return to the DMN modeler canvas.</li>
                     <li>Select the <b>Person</b> input node, click the <b>Properties</b> icon, and under <b>Information item</b>, set the <b>Data type</b> to <tt>tPerson</tt>.</li>
                     <li>Select the <b>isAdult</b> decision node, click the <b>Properties</b> icon, and under <b>Information item</b>, set the <b>Data type</b> to <tt>boolean</tt>.</li>
                     <li>Select the decision node to display the node options and click the <b>Edit</b> icon to open the DMN boxed expression editor to define the decision logic for the node.</li>
                     <li>Click the <i>undefined expression</i> field and select <b>Decision Table</b>.</li>
                     <li>Click the upper-left corner of the decision table to set the hit policy to <b>Unique</b>.</li>
                     <li>
                        <p>Set the input and output columns so that the input source <tt>Person.Age</tt> with type <tt>number</tt> determines the age limit and the output target <tt>isAdult</tt> with type <tt>boolean</tt> determines adult status:</p>
                        <fig>
                           <title>Example DMN decision table for <tt>isAdult</tt> decision</title>
                           <image href="../images/kogito-dmn-example-person-logic.png" placement="break">
                              <alt>Image of PersonDecisions decision table</alt>
                           </image>
                        </fig>
                     </li>
                     <li>Save the DMN decision file.</li>
                  </ol>
               </div>
            </li>
            <li>
               <p>With everything in place, you can start the Quarkus server with the following command in the project root:</p>
               <codeblock outputclass="language-console">
mvn quarkus:dev
</codeblock>
               <p>Then you can check the application Swagger UI at <tt>
                     <xref href="http://localhost:8080/q/swagger-ui/#/" scope="external">http://localhost:8080/q/swagger-ui/#/</xref>
                  </tt>
               </p>
            </li>
         </ol>
      </section>
   </body>
</topic>