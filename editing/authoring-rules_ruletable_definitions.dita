<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
 PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="_ruletable_definitions">
   <title>RuleTable definitions</title>
   <body>
      <p>Entries in the <tt>RuleTable</tt> area of a decision table define conditions, actions, and other rule attributes for the rules in that rule table. A spreadsheet of decision tables can contain multiple <tt>RuleTable</tt> areas.</p>
      <p>The following table lists the supported labels (column headers) and values for <tt>RuleTable</tt> definitions. For column headers, you can use either the given labels or any custom labels that begin with the letters listed in the table.</p>
      <table>
         <title>Supported <tt>RuleTable</tt> definitions</title>
         <tgroup cols="4">
            <colspec colname="col_1" colwidth="25*"/>
            <colspec colname="col_2" colwidth="20*"/>
            <colspec colname="col_3" colwidth="35*"/>
            <colspec colname="col_4" colwidth="20*"/>
            <thead>
               <row>
                  <entry>Label</entry>
                  <entry>Or custom label that begins with</entry>
                  <entry>Value</entry>
                  <entry>Usage</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>
                     <p>
                        <tt>NAME</tt>
                     </p>
                  </entry>
                  <entry>
                     <p>N</p>
                  </entry>
                  <entry>
                     <p>Provides the name for the rule generated from that row. The default is constructed from the text following the <tt>RuleTable</tt> tag and the row number.</p>
                  </entry>
                  <entry>
                     <p>At most one column.</p>
                  </entry>
               </row>
               <row>
                  <entry>
                     <p>
                        <tt>DESCRIPTION</tt>
                     </p>
                  </entry>
                  <entry>
                     <p>I</p>
                  </entry>
                  <entry>
                     <p>Results in a comment within the generated rule.</p>
                  </entry>
                  <entry>
                     <p>At most one column.</p>
                  </entry>
               </row>
               <row>
                  <entry>
                     <p>
                        <tt>CONDITION</tt>
                     </p>
                  </entry>
                  <entry>
                     <p>C</p>
                  </entry>
                  <entry>
                     <p>Code snippet and interpolated values for constructing a constraint within a pattern in a condition.</p>
                  </entry>
                  <entry>
                     <p>At least one per rule table.</p>
                  </entry>
               </row>
               <row>
                  <entry>
                     <p>
                        <tt>ACTION</tt>
                     </p>
                  </entry>
                  <entry>
                     <p>A</p>
                  </entry>
                  <entry>
                     <p>Code snippet and interpolated values for constructing an action for the consequence of the rule.</p>
                  </entry>
                  <entry>
                     <p>At least one per rule table.</p>
                  </entry>
               </row>
               <row>
                  <entry>
                     <p>
                        <tt>METADATA</tt>
                     </p>
                  </entry>
                  <entry>
                     <p>@</p>
                  </entry>
                  <entry>
                     <p>Code snippet and interpolated values for constructing a metadata entry for the rule.</p>
                  </entry>
                  <entry>
                     <p>Optional, any number of columns.</p>
                  </entry>
               </row>
            </tbody>
         </tgroup>
      </table>
      <p>The following sections provide more details about how condition, action, and metadata columns use cell data:</p>
      <dl>
         <dlentry>
            <dt>Conditions</dt>
            <dd>
               <p>For columns headed <tt>CONDITION</tt>, the cells in consecutive lines result in a conditional element:</p>
               <ul>
                  <li>
                     <p>
                        <b>First cell:</b> Text in the first cell below <tt>CONDITION</tt> develops into a pattern for the rule condition, and uses the snippet in the next line as a constraint. If the cell is merged with one or more neighboring cells, a single pattern with multiple constraints is formed. All constraints are combined into a parenthesized list and appended to the text in this cell.</p>
                     <p>If this cell is empty, the code snippet in the cell below it must result in a valid conditional element on its own. For example, instead of <tt>Order</tt> as the object type and <tt>itemsCount &gt; $1</tt> as a constraint (separate cells), you can leave the object type cell empty and enter <tt>Order( itemsCount &gt; $1 )</tt> in the constraint cell, and then do the same for any other constraint cells.</p>
                     <p>To include a pattern without constraints, you can write the pattern in front of the text of another pattern, with or without an empty pair of parentheses. You can also append a <tt>from</tt> clause to the pattern.</p>
                     <p>If the pattern ends with <tt>eval</tt>, code snippets produce boolean expressions for inclusion into a pair of parentheses after <tt>eval</tt>.</p>
                  </li>
                  <li>
                     <p>
                        <b>Second cell:</b> Text in the second cell below <tt>CONDITION</tt> is processed as a constraint on the object reference in the first cell. The code snippet in this cell is modified by interpolating values from cells farther down in the column. If you want to create a constraint consisting of a comparison using <tt>==</tt> with the value from the cells below, then the field selector alone is sufficient. Any other comparison operator must be specified as the last item within the snippet, and the value from the cells below is appended. For all other constraint forms, you must mark the position for including the contents of a cell with the symbol <tt>$param</tt>. Multiple insertions are possible if you use the symbols <tt>$1</tt>, <tt>$2</tt>, and so on, and a comma-separated list of values in the cells below. However, do not separate <tt>$1</tt>, <tt>$2</tt>, and so on, by commas, or the table will fail to process.</p>
                     <p>To expand a text according to the pattern <tt>forall($delimiter){$snippet}</tt>, repeat the <tt>$snippet</tt> once for each of the values of the comma-separated list in each of the cells below, insert the value in place of the symbol <tt>$</tt>, and join these expansions by the given <tt>$delimiter</tt>. Note that the <tt>forall</tt> construct may be surrounded by other text.</p>
                     <p>If the first cell contains an object, the completed code snippet is added to the conditional element from that cell. A pair of parentheses is provided automatically, as well as a separating comma if multiple constraints are added to a pattern in a merged cell. If the first cell is empty, the code snippet in this cell must result in a valid conditional element on its own. For example, instead of <tt>Order</tt> as the object type and <tt>itemsCount &gt; $1</tt> as a constraint (separate cells), you can leave the object type cell empty and enter <tt>Order( itemsCount &gt; $1 )</tt> in the constraint cell, and then do the same for any other constraint cells.</p>
                  </li>
                  <li>
                     <b>Third cell:</b> Text in the third cell below <tt>CONDITION</tt> is a descriptive label that you define for the column, as a visual aid.</li>
                  <li>
                     <b>Fourth cell:</b> From the fourth row on, non-blank entries provide data for interpolation. A blank cell omits the condition or constraint for this rule.</li>
               </ul>
            </dd>
         </dlentry>
         <dlentry>
            <dt>Actions</dt>
            <dd>
               <p>For columns headed <tt>ACTION</tt>, the cells in consecutive lines result in an action statement:</p>
               <ul>
                  <li>
                     <b>First cell:</b> Text in the first cell below <tt>ACTION</tt> is optional. If present, the text is interpreted as an object reference.</li>
                  <li>
                     <p>
                        <b>Second cell:</b> Text in the second cell below <tt>ACTION</tt> is a code snippet that is modified by interpolating values from cells farther down in the column. For a singular insertion, mark the position for including the contents of a cell with the symbol <tt>$param</tt>. Multiple insertions are possible if you use the symbols <tt>$1</tt>, <tt>$2</tt>, and so on, and a comma-separated list of values in the cells below. However, do not separate <tt>$1</tt>, <tt>$2</tt>, and so on, by commas, or the table will fail to process.</p>
                     <p>A text without any marker symbols can execute a method call without interpolation. In this case, use any non-blank entry in a row below the cell to include the statement. The <tt>forall</tt> construct is supported.</p>
                     <p>If the first cell contains an object, then the cell text (followed by a period), the text in the second cell, and a terminating semicolon are strung together, resulting in a method call that is added as an action statement for the consequence. If the first cell is empty, the code snippet in this cell must result in a valid action element on its own.</p>
                  </li>
                  <li>
                     <b>Third cell:</b> Text in the third cell below <tt>ACTION</tt> is a descriptive label that you define for the column, as a visual aid.</li>
                  <li>
                     <b>Fourth cell:</b> From the fourth row on, non-blank entries provide data for interpolation. A blank cell omits the condition or constraint for this rule.</li>
               </ul>
            </dd>
         </dlentry>
         <dlentry>
            <dt>Metadata</dt>
            <dd>
               <p>For columns headed <tt>METADATA</tt>, the cells in consecutive lines result in a metadata annotation for the generated rules:</p>
               <ul>
                  <li>
                     <b>First cell:</b> Text in the first cell below <tt>METADATA</tt> is ignored.</li>
                  <li>
                     <b>Second cell:</b> Text in the second cell below <tt>METADATA</tt> is subject to interpolation, using values from the cells in the rule rows. The metadata marker character <tt>@</tt> is prefixed automatically, so you do not need to include that character in the text for this cell.</li>
                  <li>
                     <b>Third cell:</b> Text in the third cell below <tt>METADATA</tt> is a descriptive label that you define for the column, as a visual aid.</li>
                  <li>
                     <b>Fourth cell:</b> From the fourth row on, non-blank entries provide data for interpolation. A blank cell results in the omission of the metadata annotation for this rule.</li>
               </ul>
            </dd>
         </dlentry>
      </dl>
   </body>
</topic>